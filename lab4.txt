diff --git a/.vs/HAL9000/FileContentIndex/0900960f-3db7-48f2-b734-1aa067f12d9b.vsidx b/.vs/HAL9000/FileContentIndex/0900960f-3db7-48f2-b734-1aa067f12d9b.vsidx
new file mode 100644
index 0000000..0b6095a
Binary files /dev/null and b/.vs/HAL9000/FileContentIndex/0900960f-3db7-48f2-b734-1aa067f12d9b.vsidx differ
diff --git a/.vs/HAL9000/FileContentIndex/read.lock b/.vs/HAL9000/FileContentIndex/read.lock
new file mode 100644
index 0000000..e69de29
diff --git a/.vs/HAL9000/v17/.wsuo b/.vs/HAL9000/v17/.wsuo
new file mode 100644
index 0000000..735700f
Binary files /dev/null and b/.vs/HAL9000/v17/.wsuo differ
diff --git a/.vs/ProjectSettings.json b/.vs/ProjectSettings.json
new file mode 100644
index 0000000..0cf5ea5
--- /dev/null
+++ b/.vs/ProjectSettings.json
@@ -0,0 +1,3 @@
+{
+  "CurrentProjectSetting": "No Configurations"
+}
\ No newline at end of file
diff --git a/.vs/VSWorkspaceState.json b/.vs/VSWorkspaceState.json
new file mode 100644
index 0000000..6b61141
--- /dev/null
+++ b/.vs/VSWorkspaceState.json
@@ -0,0 +1,6 @@
+{
+  "ExpandedNodes": [
+    ""
+  ],
+  "PreviewInSolutionExplorer": false
+}
\ No newline at end of file
diff --git a/.vs/slnx.sqlite b/.vs/slnx.sqlite
new file mode 100644
index 0000000..ceabdd9
Binary files /dev/null and b/.vs/slnx.sqlite differ
diff --git a/lab3.txt b/lab3.txt
new file mode 100644
index 0000000..f090a6e
--- /dev/null
+++ b/lab3.txt
@@ -0,0 +1,359 @@
+diff --git a/PXE/Tests.module b/PXE/Tests.module
+index e69de29..5c2a88a 100644
+--- a/PXE/Tests.module
++++ b/PXE/Tests.module
+@@ -0,0 +1 @@
++/threads
+diff --git a/lab2.txt b/lab2.txt
+index 3b12c02..82440de 100644
+--- a/lab2.txt
++++ b/lab2.txt
+@@ -44,6 +44,142 @@ index 0000000..180e05d
+ + #
+ + # Checks the result of the specified test (1st parameter) by comparing the generated .result file with the
+ + # expected .test file. Returns 1 if the test succeeded and 0 if the test failed. Also, an .outcome file will be
++diff --git a/lab2.txt b/lab2.txt
++new file mode 100644
++index 0000000..3b12c02
++--- /dev/null
+++++ b/lab2.txt
++@@ -0,0 +1,130 @@
+++diff --git a/lab1.txt b/lab1.txt
+++new file mode 100644
+++index 0000000..180e05d
+++--- /dev/null
++++++ b/lab1.txt
+++@@ -0,0 +1,40 @@
++++diff --git a/postbuild/paths.cmd b/postbuild/paths.cmd
++++index cec924b..c0a8f7e 100644
++++--- a/postbuild/paths.cmd
+++++++ b/postbuild/paths.cmd
++++@@ -12,6 +12,7 @@ set PATH_TO_VM_DISK=__EMPTY__
++++ set PATH_TO_VM_TOOLS=__EMPTY__
++++ set VOL_MOUNT_LETTER=__EMPTY__
++++ 
+++++if _%COMPUTERNAME%_==_DESKTOP-29S2BNN_ goto config_DESKTOP-29S2BNN
++++ if _%COMPUTERNAME%_==_AGURZOU-DEV-PC_ goto config_AGURZOU-DEV
++++ if _%COMPUTERNAME%_==_ALEX-PC_ goto config_ALEX-PC
++++ if _%COMPUTERNAME%_==_AGURZOU-LPT_ goto config_AGURZOU-LPT
++++@@ -69,4 +70,13 @@ set BOCHS_PATH="c:\Program Files (x86)\Bochs-2.6.8\"
++++ 
++++ goto end
++++ 
+++++:config_DESKTOP-29S2BNN
+++++
+++++SET PXE_PATH="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\PXE"
+++++SET PATH_TO_LOG_FILE="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.log"
+++++SET PATH_TO_VM_FILE="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.vmx"
+++++SET PATH_TO_VIX_TOOLS="D:\programe\VMware.Workstation.Pro.16.2.0+VMware.Workstation.16.2.0.Player"
+++++SET PATH_TO_VM_DISK="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.vmdk"
+++++goto end
+++++
++++ :end
++++\ No newline at end of file
++++diff --git a/tests/check_tests.pl b/tests/check_tests.pl
++++index 591ceae..a3c2e6b 100644
++++--- a/tests/check_tests.pl
+++++++ b/tests/check_tests.pl
++++@@ -12,7 +12,7 @@
++++ use strict;
++++ use warnings;
++++ 
++++-# CheckFile
+++++# CheckFile blbalbal
++++ #
++++ # Checks the result of the specified test (1st parameter) by comparing the generated .result file with the
++++ # expected .test file. Returns 1 if the test succeeded and 0 if the test failed. Also, an .outcome file will be
+++diff --git a/postbuild/paths.cmd b/postbuild/paths.cmd
+++index c0a8f7e..5c95421 100644
+++--- a/postbuild/paths.cmd
++++++ b/postbuild/paths.cmd
+++@@ -72,11 +72,12 @@ goto end
+++ 
+++ :config_DESKTOP-29S2BNN
+++ 
+++-SET PXE_PATH="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\PXE"
+++-SET PATH_TO_LOG_FILE="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.log"
+++-SET PATH_TO_VM_FILE="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.vmx"
+++ SET PATH_TO_VIX_TOOLS="D:\programe\VMware.Workstation.Pro.16.2.0+VMware.Workstation.16.2.0.Player"
++++SET PATH_TO_LOG_FILE="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.log"
++++SET VOL_MOUNT_LETTER="Q:"
+++ SET PATH_TO_VM_DISK="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.vmdk"
++++SET PATH_TO_VM_FILE="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.vmx"
++++SET PXE_PATH="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\PXE"
+++ goto end
+++ 
+++ :end
+++\ No newline at end of file
+++diff --git a/src/HAL9000/src/thread.c b/src/HAL9000/src/thread.c
+++index b311f0c..1b26ff6 100644
+++--- a/src/HAL9000/src/thread.c
++++++ b/src/HAL9000/src/thread.c
+++@@ -36,6 +36,11 @@ typedef struct _THREAD_SYSTEM_DATA
+++ 
+++     _Guarded_by_(ReadyThreadsLock)
+++     LIST_ENTRY          ReadyThreadsList;
++++
++++    LOCK                CountThreadsLock;
++++
++++    _Guarded_by_(CountThreadsLock)
++++    DWORD          CountThreads;
+++ } THREAD_SYSTEM_DATA, *PTHREAD_SYSTEM_DATA;
+++ 
+++ static THREAD_SYSTEM_DATA m_threadSystemData;
+++@@ -792,6 +797,9 @@ _ThreadInit(
+++ 
+++         pThread->Id = _ThreadSystemGetNextTid();
+++         pThread->State = ThreadStateBlocked;
++++        // lab02
++++        // prob01
++++        LOG("Thread %s created with ID 0x%x\n", pThread->Name, pThread->Id);
+++         pThread->Priority = Priority;
+++ 
+++         LockInit(&pThread->BlockLock);
+++@@ -799,6 +807,11 @@ _ThreadInit(
+++         LockAcquire(&m_threadSystemData.AllThreadsLock, &oldIntrState);
+++         InsertTailList(&m_threadSystemData.AllThreadsList, &pThread->AllList);
+++         LockRelease(&m_threadSystemData.AllThreadsLock, oldIntrState);
++++
++++        // prob02
++++        LockAcquire(&m_threadSystemData.CountThreadsLock, &oldIntrState);
++++        m_threadSystemData.CountThreads++;
++++        LockRelease(&m_threadSystemData.CountThreadsLock, oldIntrState);
+++     }
+++     __finally
+++     {
+++@@ -1191,6 +1204,11 @@ _ThreadDestroy(
+++     RemoveEntryList(&pThread->AllList);
+++     LockRelease(&m_threadSystemData.AllThreadsLock, oldState);
+++ 
++++    // prob02
++++    LockAcquire(&m_threadSystemData.CountThreadsLock, &oldState);
++++    m_threadSystemData.CountThreads--;
++++    LockRelease(&m_threadSystemData.CountThreadsLock, oldState);
++++
+++     // This must be done before removing the thread from the process list, else
+++     // this may be the last thread and the process VAS will be freed by the time
+++     // ProcessRemoveThreadFromList - this function also dereferences the process
+++diff --git a/tests/check_tests.pl b/tests/check_tests.pl
+++index a3c2e6b..591ceae 100644
+++--- a/tests/check_tests.pl
++++++ b/tests/check_tests.pl
+++@@ -12,7 +12,7 @@
+++ use strict;
+++ use warnings;
+++ 
+++-# CheckFile blbalbal
++++# CheckFile
+++ #
+++ # Checks the result of the specified test (1st parameter) by comparing the generated .result file with the
+++ # expected .test file. Returns 1 if the test succeeded and 0 if the test failed. Also, an .outcome file will be
+ diff --git a/postbuild/paths.cmd b/postbuild/paths.cmd
+ index c0a8f7e..5c95421 100644
+ --- a/postbuild/paths.cmd
+@@ -65,10 +201,53 @@ index c0a8f7e..5c95421 100644
+  
+  :end
+ \ No newline at end of file
++diff --git a/src/HAL9000/headers/thread_internal.h b/src/HAL9000/headers/thread_internal.h
++index be2588a..958d2d7 100644
++--- a/src/HAL9000/headers/thread_internal.h
+++++ b/src/HAL9000/headers/thread_internal.h
++@@ -90,6 +90,9 @@ typedef struct _THREAD
++     PVOID                   UserStack;
++ 
++     struct _PROCESS*        Process;
+++    // Add a field in the THREAD structure to keep for each thread the TID of the thread that created it (parent of a thread). Display it in CmdListThreads() function, for each thread.
+++    TID                     ParentTid;
+++
++ } THREAD, *PTHREAD;
++ 
++ //******************************************************************************
++diff --git a/src/HAL9000/src/cmd_thread_helper.c b/src/HAL9000/src/cmd_thread_helper.c
++index f794c95..1877813 100644
++--- a/src/HAL9000/src/cmd_thread_helper.c
+++++ b/src/HAL9000/src/cmd_thread_helper.c
++@@ -137,8 +137,15 @@ void
++     LOG("%10s", "Prt ticks|");
++     LOG("%10s", "Ttl ticks|");
++     LOG("%10s", "Process|");
+++    DWORD countThreads = ThreadGetCount();
+++    LOG("Numarul de threaduri este %d", countThreads);
+++    //PID parentPID = ThreadGetParentId();
+++    //LOG("PID-ul parintelui threadului curent este %d", parentPID);
+++
++     LOG("\n");
++ 
+++    
+++
++     status = ThreadExecuteForEachThreadEntry(_CmdThreadPrint, NULL );
++     ASSERT( SUCCEEDED(status));
++ }
+ diff --git a/src/HAL9000/src/thread.c b/src/HAL9000/src/thread.c
+-index b311f0c..1b26ff6 100644
++index b311f0c..0400628 100644
+ --- a/src/HAL9000/src/thread.c
+ +++ b/src/HAL9000/src/thread.c
++@@ -10,7 +10,7 @@
++ #include "gdtmu.h"
++ #include "pe_exports.h"
++ 
++-#define TID_INCREMENT               4
+++#define TID_INCREMENT               10 // prob03
++ 
++ #define THREAD_TIME_SLICE           1
++ 
+ @@ -36,6 +36,11 @@ typedef struct _THREAD_SYSTEM_DATA
+  
+      _Guarded_by_(ReadyThreadsLock)
+@@ -81,7 +260,36 @@ index b311f0c..1b26ff6 100644
+  } THREAD_SYSTEM_DATA, *PTHREAD_SYSTEM_DATA;
+  
+  static THREAD_SYSTEM_DATA m_threadSystemData;
+-@@ -792,6 +797,9 @@ _ThreadInit(
++@@ -663,6 +668,28 @@ ThreadSetPriority(
++     GetCurrentThread()->Priority = NewPriority;
++ }
++ 
+++// prob02
+++DWORD
+++ThreadGetCount(
+++
+++    )
+++{
+++    return m_threadSystemData.CountThreads;
+++}
+++
+++// prob04
+++TID
+++ThreadGetParentID(
+++    IN_OPT  PTHREAD             Thread
+++    )
+++{
+++    PTHREAD pThread = (NULL != Thread) ? Thread : GetCurrentThread();
+++
+++    return (NULL != pThread) ? pThread->ParentTid : 0;
+++}
+++
+++
+++
++ STATUS
++ ThreadExecuteForEachThreadEntry(
++     IN      PFUNC_ListFunction  Function,
++@@ -792,6 +819,9 @@ _ThreadInit(
+  
+          pThread->Id = _ThreadSystemGetNextTid();
+          pThread->State = ThreadStateBlocked;
+@@ -91,7 +299,7 @@ index b311f0c..1b26ff6 100644
+          pThread->Priority = Priority;
+  
+          LockInit(&pThread->BlockLock);
+-@@ -799,6 +807,11 @@ _ThreadInit(
++@@ -799,6 +829,11 @@ _ThreadInit(
+          LockAcquire(&m_threadSystemData.AllThreadsLock, &oldIntrState);
+          InsertTailList(&m_threadSystemData.AllThreadsList, &pThread->AllList);
+          LockRelease(&m_threadSystemData.AllThreadsLock, oldIntrState);
+@@ -103,7 +311,7 @@ index b311f0c..1b26ff6 100644
+      }
+      __finally
+      {
+-@@ -1191,6 +1204,11 @@ _ThreadDestroy(
++@@ -1191,6 +1226,11 @@ _ThreadDestroy(
+      RemoveEntryList(&pThread->AllList);
+      LockRelease(&m_threadSystemData.AllThreadsLock, oldState);
+  
+@@ -115,6 +323,23 @@ index b311f0c..1b26ff6 100644
+      // This must be done before removing the thread from the process list, else
+      // this may be the last thread and the process VAS will be freed by the time
+      // ProcessRemoveThreadFromList - this function also dereferences the process
++diff --git a/src/shared/kernel/thread.h b/src/shared/kernel/thread.h
++index acc7153..53d8546 100644
++--- a/src/shared/kernel/thread.h
+++++ b/src/shared/kernel/thread.h
++@@ -117,5 +117,11 @@ ThreadGetId(
++ //******************************************************************************
++ THREAD_PRIORITY
++ ThreadGetPriority(
++-    IN_OPT  PTHREAD             Thread
+++    
+++    );
+++
+++// Get thread count
+++DWORD
+++ThreadGetCount(
+++
++     );
+ diff --git a/tests/check_tests.pl b/tests/check_tests.pl
+ index a3c2e6b..591ceae 100644
+ --- a/tests/check_tests.pl
+diff --git a/postbuild/paths.cmd b/postbuild/paths.cmd
+index 5c95421..351e7db 100644
+--- a/postbuild/paths.cmd
++++ b/postbuild/paths.cmd
+@@ -72,12 +72,12 @@ goto end
+ 
+ :config_DESKTOP-29S2BNN
+ 
+-SET PATH_TO_VIX_TOOLS="D:\programe\VMware.Workstation.Pro.16.2.0+VMware.Workstation.16.2.0.Player"
++SET PATH_TO_VM_FILE="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.vmx"
++SET PXE_PATH="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\PXE"
+ SET PATH_TO_LOG_FILE="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.log"
+ SET VOL_MOUNT_LETTER="Q:"
++SET PATH_TO_VIX_TOOLS="D:\programe\VMware.Workstation.Pro.16.2.0+VMware.Workstation.16.2.0.Player"
+ SET PATH_TO_VM_DISK="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.vmdk"
+-SET PATH_TO_VM_FILE="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.vmx"
+-SET PXE_PATH="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\PXE"
+ goto end
+ 
+ :end
+\ No newline at end of file
+diff --git a/src/HAL9000/src/system.c b/src/HAL9000/src/system.c
+index b0b436e..ca6d91d 100644
+--- a/src/HAL9000/src/system.c
++++ b/src/HAL9000/src/system.c
+@@ -70,7 +70,7 @@ SystemInit(
+     status = STATUS_SUCCESS;
+     pCpu = NULL;
+ 
+-    LogSystemInit(LogLevelInfo,
++    LogSystemInit(LogLevelError, // lab03, prob01
+                   LogComponentInterrupt | LogComponentIo | LogComponentAcpi,
+                   TRUE
+                   );
+@@ -255,6 +255,11 @@ SystemInit(
+ 
+     LOGL("ThreadSystemInitIdleForCurrentCPU succeeded\n");
+ 
++    LogSystemInit(LogLevelInfo, // lab03, prob02
++        LogComponentInterrupt | LogComponentIo | LogComponentAcpi,
++        TRUE
++    );
++
+     status = AcpiInterfaceLateInit();
+     if (!SUCCEEDED(status))
+     {
+@@ -312,7 +317,10 @@ SystemInit(
+     }
+ 
+     LOGL("Network stack successfully initialized\n");
+-
++    //LogSystemInit(LogLevelTrace, // lab03, prob03
++    //    LogComponentThread,
++    //    TRUE
++    //);
+     return status;
+ }
+ 
+diff --git a/src/HAL9000/src/thread.c b/src/HAL9000/src/thread.c
+index 0400628..ab93be6 100644
+--- a/src/HAL9000/src/thread.c
++++ b/src/HAL9000/src/thread.c
+@@ -175,6 +175,8 @@ ThreadSystemInitMainForCurrentCPU(
+     snprintf( mainThreadName, MAX_PATH, "%s-%02x", "main", pCpu->ApicId );
+ 
+     status = _ThreadInit(mainThreadName, ThreadPriorityDefault, &pThread, FALSE);
++
++    //status = _ThreadInit(mainThreadName, ThreadPriorityDefault, NULL, FALSE); // lab03 prob04 Kernel panic because the thread is called with NULL as parameter
+     if (!SUCCEEDED(status))
+     {
+         LOG_FUNC_ERROR("_ThreadInit", status );
diff --git a/postbuild/paths.cmd b/postbuild/paths.cmd
index 351e7db..9e5eb0b 100644
--- a/postbuild/paths.cmd
+++ b/postbuild/paths.cmd
@@ -72,11 +72,11 @@ goto end
 
 :config_DESKTOP-29S2BNN
 
-SET PATH_TO_VM_FILE="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.vmx"
 SET PXE_PATH="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\PXE"
+SET PATH_TO_VM_FILE="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.vmx"
+SET PATH_TO_VIX_TOOLS="D:\programe\VMware.Workstation.Pro.16.2.0+VMware.Workstation.16.2.0.Player"
 SET PATH_TO_LOG_FILE="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.log"
 SET VOL_MOUNT_LETTER="Q:"
-SET PATH_TO_VIX_TOOLS="D:\programe\VMware.Workstation.Pro.16.2.0+VMware.Workstation.16.2.0.Player"
 SET PATH_TO_VM_DISK="D:\facultate\An4sem1\PSO\HAL9000\HAL9000\VM\HAL9000_VM\HAL9000.vmdk"
 goto end
 
diff --git a/src/HAL9000/HAL9000.vcxproj b/src/HAL9000/HAL9000.vcxproj
index 0dd1641..f48a684 100644
--- a/src/HAL9000/HAL9000.vcxproj
+++ b/src/HAL9000/HAL9000.vcxproj
@@ -242,6 +242,7 @@
     <ClCompile Include="src\os_info.c" />
     <ClCompile Include="src\pci_system.c" />
     <ClCompile Include="src\print.c" />
+    <ClCompile Include="src\semaphores.c" />
     <ClCompile Include="src\serial_comm.c" />
     <ClCompile Include="src\smp.c" />
     <ClCompile Include="src\syscall.c" />
@@ -344,6 +345,7 @@
     <ClInclude Include="headers\os_info.h" />
     <ClInclude Include="headers\print.h" />
     <ClInclude Include="headers\scan_codes.h" />
+    <ClInclude Include="headers\semaphores.h" />
     <ClInclude Include="headers\serial_comm.h" />
     <ClInclude Include="headers\smp.h" />
     <ClInclude Include="headers\synch.h" />
diff --git a/src/HAL9000/HAL9000.vcxproj.filters b/src/HAL9000/HAL9000.vcxproj.filters
index f31d483..bc952b3 100644
--- a/src/HAL9000/HAL9000.vcxproj.filters
+++ b/src/HAL9000/HAL9000.vcxproj.filters
@@ -402,6 +402,9 @@
     <ClCompile Include="src\test_process.c">
       <Filter>Source Files\debug\test\userprog</Filter>
     </ClCompile>
+    <ClCompile Include="src\semaphores.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
   </ItemGroup>
   <ItemGroup>
     <ClInclude Include="headers\HAL9000.h">
@@ -704,6 +707,9 @@
     <ClInclude Include="headers\test_process.h">
       <Filter>Header Files\debug\test\userprog</Filter>
     </ClInclude>
+    <ClInclude Include="headers\semaphores.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
   </ItemGroup>
   <ItemGroup>
     <None Include="src\defines.yasm">
diff --git a/src/HAL9000/headers/semaphores.h b/src/HAL9000/headers/semaphores.h
new file mode 100644
index 0000000..922ae00
--- /dev/null
+++ b/src/HAL9000/headers/semaphores.h
@@ -0,0 +1,35 @@
+#pragma once
+
+#include "list.h"
+#include "synch.h"
+#include "data_type.h"
+#include "spinlock.h"
+#include "test_common.h"
+#include "io.h"
+
+typedef struct _SEMAPHORE
+{
+    DWORD           Value;
+    DWORD           Count;
+    LIST_ENTRY      WaitingList;
+    PSPINLOCK       Lock; //cu spinlock
+
+} SEMAPHORE, * PSEMAPHORE;
+
+void
+SemaphoreInit(
+    OUT     PSEMAPHORE      Semaphore,
+    IN      DWORD           InitialValue
+);
+
+void
+SemaphoreDown(
+    INOUT   PSEMAPHORE      Semaphore,
+    IN      DWORD           Value
+);
+
+void
+SemaphoreUp(
+    INOUT   PSEMAPHORE      Semaphore,
+    IN      DWORD           Value
+);
\ No newline at end of file
diff --git a/src/HAL9000/headers/thread_internal.h b/src/HAL9000/headers/thread_internal.h
index 958d2d7..7c8df85 100644
--- a/src/HAL9000/headers/thread_internal.h
+++ b/src/HAL9000/headers/thread_internal.h
@@ -93,6 +93,15 @@ typedef struct _THREAD
     // Add a field in the THREAD structure to keep for each thread the TID of the thread that created it (parent of a thread). Display it in CmdListThreads() function, for each thread.
     TID                     ParentTid;
 
+    // threads 2. store the identifier of the CPU the thread was created on.
+    APIC_ID                 CreationCpuApicId;
+
+    // for thread as a child
+    TID                     ParentId;
+    // for thread as a parent
+    unsigned long           NumberOfChildrenCreated;
+    volatile long           NumberOfActiveChildren;
+
 } THREAD, *PTHREAD;
 
 //******************************************************************************
diff --git a/src/HAL9000/src/ex_event.c b/src/HAL9000/src/ex_event.c
index c185e77..c0359f8 100644
--- a/src/HAL9000/src/ex_event.c
+++ b/src/HAL9000/src/ex_event.c
@@ -98,7 +98,7 @@ ExEventWaitForSignal(
     {
         LockAcquire(&Event->EventLock, &dummyState);
         InsertTailList(&Event->WaitingList, &pCurrentThread->ReadyList);
-        ThreadTakeBlockLock();
+        ThreadTakeBlockLock()
         LockRelease(&Event->EventLock, dummyState);
         ThreadBlock();
 
diff --git a/src/HAL9000/src/semaphores.c b/src/HAL9000/src/semaphores.c
new file mode 100644
index 0000000..99809db
--- /dev/null
+++ b/src/HAL9000/src/semaphores.c
@@ -0,0 +1,69 @@
+#include "common_lib.h"
+#include "lock_common.h"
+#include "semaphores.h"
+#include "synch.h"
+#include "HAL9000.h"
+#include "thread_internal.h"
+
+// Semaphore using busy waiting
+void
+SemaphoreInit(
+    OUT         PSEMAPHORE       Semaphore,
+    IN          DWORD            InitialValue
+)
+{
+    ASSERT(NULL != Semaphore);
+
+    memzero(Semaphore, sizeof(Semaphore));
+    Semaphore->Value = InitialValue;
+    Semaphore->Count = 0;
+    SpinlockInit(&Semaphore->Lock);
+
+    InitializeListHead(&Semaphore->WaitingList);
+}
+
+void 
+SemaphoreDown(
+    OUT         PSEMAPHORE       Semaphore, 
+    IN          DWORD            Value
+)
+{
+    INTR_STATE dummyState;
+    INTR_STATE oldState;
+    PTHREAD pCurrentThread = GetCurrentThread();
+
+    ASSERT(NULL != Semaphore);
+    ASSERT(NULL != pCurrentThread);
+
+    oldState = CpuIntrDisable();
+
+    LockAcquire(&Semaphore->Lock, &dummyState);
+    if (NULL == Semaphore->Lock->Holder)
+    {
+        Semaphore->Lock->Holder = pCurrentThread;
+    }
+
+    if (Semaphore->Count > 0)
+    {
+        Semaphore->Count--;
+    }
+    else
+    {
+        InsertTailList(&Semaphore->WaitingList, &pCurrentThread->ReadyList);
+        ThreadTakeBlockLock();
+        LockRelease(&Semaphore->Lock, dummyState);
+        ThreadBlock();
+        LockAcquire(&Semaphore->Lock, &dummyState);
+    }
+
+    _Analysis_assume_lock_acquired_(*Semaphore);
+
+    LockRelease(&Semaphore->Lock, dummyState);
+
+    CpuIntrSetState(oldState);
+}
+
+void SemaphoreUp(PSEMAPHORE Semaphore, DWORD Value)
+{
+    
+}
diff --git a/src/HAL9000/src/thread.c b/src/HAL9000/src/thread.c
index ab93be6..eaf4582 100644
--- a/src/HAL9000/src/thread.c
+++ b/src/HAL9000/src/thread.c
@@ -10,7 +10,7 @@
 #include "gdtmu.h"
 #include "pe_exports.h"
 
-#define TID_INCREMENT               10 // prob03
+#define TID_INCREMENT               8 // threads 1. si lab03
 
 #define THREAD_TIME_SLICE           1
 
